{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Footer.js","utils/api.js","components/App.js","serviceWorker.js","index.js","images/logo/logo-white.svg"],"names":["Header","className","src","header__logoPath","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","user","useContext","isOwn","owner","_id","cardDeleteButtonClassName","classNames","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","type","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","key","PopupWithForm","title","isOpen","onClose","onSubmit","children","submit","action","method","noValidate","ImagePopup","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","id","placeholder","value","onChange","target","minLength","maxLength","required","EditAvatarPopup","onUpdateAvatar","setAvatar","linkRef","useRef","newAvatarLink","current","defaultValue","ref","AddPlacePopup","setLink","Footer","api","options","_response","res","ok","json","Promise","reject","status","this","_baseUrl","baseUrl","_headers","headers","fetch","then","data","body","JSON","stringify","authorization","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","setCards","all","getUserInfo","getInitialCards","catch","err","console","log","closeAllPopups","Provider","handleLikeCards","newCard","newCards","c","deleteLikeCard","likeCard","deleteCard","filter","sendUserAvatar","newUserInfo","sendUserInfo","sendCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.2e95b639.chunk.js","sourcesContent":["import React from 'react';\nimport header__logoPath from '../images/logo/logo-white.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={header__logoPath} alt=\"логотип заголовка\" />\n        </header>\n    );\n}\n\nexport default Header","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport classNames from 'classnames';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\n    const user = React.useContext(CurrentUserContext);\n    const handleCardClick = () => {\n        onCardClick(card);\n    };\n    const handleLikeClick = () => {\n        onCardLike(card);\n    };\n    const handleDeleteClick = () => {\n        onCardDelete(card);\n    };\n\n    const isOwn = card.owner._id === user._id;\n    const cardDeleteButtonClassName = classNames('element__remove', { 'element__remove_hidden': !isOwn });\n\n    const isLiked = card.likes.some(i => i._id === user._id);\n    const cardLikeButtonClassName = classNames('element__like', { 'element__like_liked': isLiked });\n\n    return(\n        <li className=\"element\">\n            <img \n                className=\"element__image\"\n                src={card.link}\n                alt={card.name}\n                onClick={handleCardClick}\n            />\n            <p className=\"element__description\">{card.name}</p>\n            <div className=\"element__likes\">\n                <button\n                    className={cardLikeButtonClassName}\n                    onClick={handleLikeClick}\n                    type=\"button\">\n                </button>\n                <p className=\"element__like-counter\">{card.likes.length}</p>\n            </div>\n            <button\n                className={cardDeleteButtonClassName}\n                onClick={handleDeleteClick}\n                type=\"button\">\n            </button>                    \n        </li>\n    );\n}\n\nexport default Card","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main({\n    onEditAvatar,\n    onEditProfile,\n    onAddPlace,\n    onCardClick,\n    onCardLike,\n    onCardDelete,\n    cards,\n}) {\n    const user = React.useContext(CurrentUserContext);\n\n    return(\n        <main className=\"content\">\n\n            <section className=\"profile\">\n                <div className=\"profile__info\">\n                    <div className=\"profile__avatar\">\n                        <img \n                            className=\"profile__avatar-image\"\n                            src={user.avatar}\n                            alt=\"аватар профиля\"\n                        />\n                        <button \n                            className=\"profile__avatar-edit\" \n                            type=\"button\"\n                            onClick={onEditAvatar}\n                        >\n                        </button>\n                    </div>\n                    <div className=\"profile__text\">\n                        <p className=\"profile__text-name\">\n                            {user.name}\n                        </p>\n                        <button \n                            className=\"profile__text-edit\" \n                            type=\"button\"\n                            onClick={onEditProfile}\n                        >\n                        </button>\n                        <p className=\"profile__text-description\">\n                            {user.about}\n                        </p>\n                    </div>\n                </div>\n                <button \n                    className=\"profile__add-button\" \n                    type=\"button\"\n                    onClick={onAddPlace}\n                >\n                </button>\n            </section>\n\n            <section className=\"elements\">\n                <ul className=\"elements__list\">\n                    {cards.map((card) => (\n                        <Card \n                            key={card._id} \n                            card={card} \n                            onCardClick={onCardClick}\n                            onCardLike={onCardLike}\n                            onCardDelete={onCardDelete}\n                        />\n                    ))}\n                </ul>\n            </section>\n\n        </main>\n    );\n}\n\nexport default Main","import React from 'react';\n\nfunction PopupWithForm({ name, title,isOpen, onClose, onSubmit, children, submit }) {\n    return(\n        <section className={`popup popup__${name} ${isOpen && 'popup_opened'}`}>\n            <form \n                className=\"popup__container\" \n                name={`${name}`} \n                action=\"#\" \n                method=\"GET\"\n                onSubmit={onSubmit}\n                noValidate\n            >\n                <button \n                    className=\"popup__close-button\" \n                    type=\"button\"\n                    onClick={onClose}\n                >\n                </button>\n                <p className=\"popup__container-name\">{`${title}`}</p>\n                <fieldset className=\"popup__container-form\">\n                    {children}\n                    <button \n                        className=\"popup__submit-button\" \n                        type=\"submit\"\n                    >{`${submit}`}\n                    </button>\n                </fieldset>\n            </form>\n        </section>\n    );\n}\n\nexport default PopupWithForm","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n    return(\n        <section className={`popup popup__image ${card && 'popup_opened'}`}>\n            <div className=\"popup__item\">\n                <button \n                    className=\"popup__close-button\" \n                    type=\"button\"\n                    onClick={onClose}\n                >\n                </button>        \n                <img \n                    className=\"popup__item-image\" \n                    src={card.link}\n                    alt={card.name}\n                />\n                <p className=\"popup__item-name\">{card.name}</p>\n            </div>\n        </section>\n    );\n}\n\nexport default ImagePopup","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n    const user = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    React.useEffect(() => {\n        setName(user.name);\n        setDescription(user.about);\n    }, [user]);\n\n    const handleChangeName = (e) => {\n        setName(e.target.value);\n    };\n\n    const handleChangeDescription = (e) => {\n        setDescription(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onUpdateUser({\n            name: name,\n            about: description,\n        });\n    };\n\n    return (\n        <PopupWithForm \n            name=\"edit-profile\" \n            title=\"Редактировать профиль\"\n            submit=\"Сохранить\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n        >\n            <label className=\"popup__form-field\">\n                <input\n                    className=\"popup__entry-field popup__entry-field_account-name\"\n                    id=\"entry-field-account-name\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Введите имя\"\n                    value={name || ''}\n                    onChange={handleChangeName}\n                    minLength=\"2\"\n                    maxLength=\"40\"\n                    required\n                />\n                <span\n                    className=\"popup__entry-field-error\"\n                    id=\"entry-field-account-name-error\">\n                </span>\n            </label>\n            <label className=\"popup__form-field\">\n                <input\n                    className=\"popup__entry-field popup__entry-field_account-description\"\n                    id=\"entry-field-account-description\"\n                    type=\"text\"\n                    name=\"about\"\n                    placeholder=\"Введите описание\"\n                    value={description || ''}\n                    onChange={handleChangeDescription}\n                    minLength=\"2\"\n                    maxLength=\"200\"\n                    required\n                />\n                <span\n                    className=\"popup__entry-field-error\"\n                    id=\"entry-field-account-description-error\">\n                </span>\n            </label>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n    const user = React.useContext(CurrentUserContext);\n    const [avatar, setAvatar] = React.useState('')\n    const linkRef = React.useRef();\n\n    React.useEffect(() => {\n        setAvatar(user.avatar);\n    }, [user]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const newAvatarLink = linkRef.current.value;\n\n        onUpdateAvatar({\n            link: newAvatarLink\n        });\n    };\n\n    return(\n        <PopupWithForm \n            name=\"update-avatar\"\n            title=\"Обновить аватар\"\n            submit=\"Сохранить\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n        >\n            <label className=\"popup__form-field\">\n                <input\n                    className=\"popup__entry-field popup__entry-field_avatar-image-url\"\n                    id=\"entry-field-avatar-image-url\"\n                    type=\"url\"\n                    name=\"link\"\n                    defaultValue={avatar}\n                    ref={linkRef}\n                    placeholder=\"Ссылка на картинку\"\n                    required\n                />\n                <span\n                    className=\"popup__entry-field-error\"\n                    id=\"entry-field-avatar-image-url-error\">\n                </span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default EditAvatarPopup","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\n    const [name, setName] = React.useState('');\n    const [link, setLink] = React.useState('');\n\n    const handleChangeName = (e) => {\n        setName(e.target.value);\n    };\n\n    const handleChangeLink = (e) => {\n        setLink(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onAddPlace({\n            name: name,\n            link: link,\n        });\n    };\n\n    return(\n        <PopupWithForm \n            name=\"new-item\"\n            title=\"Новое место\"\n            submit=\"Создать\"\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n        >\n            <label className=\"popup__form-field\">\n                <input\n                    className=\"popup__entry-field popup__entry-field_item-name\"\n                    id=\"entry-field-item-name\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Название\"\n                    value={name || ''}\n                    onChange={handleChangeName}\n                    minLength=\"1\"\n                    maxLength=\"30\"\n                    required\n                />\n                <span\n                    className=\"popup__entry-field-error\"\n                    id=\"entry-field-item-name-error\">\n                </span>\n            </label>\n            <label className=\"popup__form-field\">\n                <input\n                    className=\"popup__entry-field popup__entry-field_item-image-url\"\n                    id=\"entry-field-item-image-url\"\n                    type=\"url\"\n                    name=\"link\"\n                    placeholder=\"Ссылка на картинку\"\n                    value={link || ''}\n                    onChange={handleChangeLink}\n                    required\n                />\n                <span\n                    className=\"popup__entry-field-error\"\n                    id=\"entry-field-item-image-url-error\">\n                </span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup","import React from 'react';\n\nfunction Footer() {\n    return(\n        <footer className=\"footer\">\n            <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer","class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    _response = (res) => {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        })\n            .then(this._response)\n    }\n\n    getUserInfo() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        })\n        .then(this._response)\n    }\n\n    sendUserInfo(data) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n        .then(this._response)\n    }\n\n    sendUserAvatar(data) {\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.link\n            })\n        })\n        .then(this._response)\n    }\n\n    sendCard(data) {\n        return fetch(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n        .then(this._response)\n    }\n\n    likeCard(id) {\n        return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n            method: 'PUT',\n            headers: this._headers \n        })\n        .then(this._response)\n    }\n\n    deleteLikeCard(id) {\n        return fetch(`${this._baseUrl}/cards/likes/${id}`, {\n            method: 'DELETE',\n            headers: this._headers \n        })\n        .then(this._response)\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._baseUrl}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._headers \n        })\n        .then(this._response)\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n        authorization: 'e85ea904-e4e6-4bf9-b3e5-7844a7dfa51b',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Footer from './Footer';\nimport api from '../utils/api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState('');\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n            .then(([user, cards]) => {\n                setCurrentUser(user);\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    const handleEditAvatarClick = () => {\n        setEditAvatarPopupOpen(true)\n    };\n\n    const handleEditProfileClick = () => {\n        setEditProfilePopupOpen(true)\n    };\n\n    const handleAddPlaceClick = () => {\n        setAddPlacePopupOpen(true)\n    };\n\n    const closeAllPopups = () => {\n        setEditAvatarPopupOpen(false);\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setSelectedCard(false);\n    };\n\n    const handleUpdateUser = (newUserInfo) => {\n        api.sendUserInfo(newUserInfo)\n            .then((user) => {\n                setCurrentUser(user);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const handleUpdateAvatar = (newAvatarLink) => {\n        api.sendUserAvatar(newAvatarLink)\n            .then((user) => {\n                setCurrentUser(user);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const handleCardLike = (card) => {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        const handleLikeCards = (newCard) => {\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            setCards(newCards);\n        }\n\n        const changeLike = () => {\n            if(!isLiked) {\n                api.likeCard(card._id)\n                    .then((newCard) => {\n                        handleLikeCards(newCard);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            } else {\n                api.deleteLikeCard(card._id)\n                    .then((newCard) => {\n                        handleLikeCards(newCard);\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            }\n        }\n\n        changeLike();\n    };\n\n    const handleCardDelete = (card) => {\n        const isOwn = card.owner._id === currentUser._id;\n\n        api.deleteCard(card._id, isOwn)\n            .then(() => {\n                const newCards = cards.filter((c) => c._id !== card._id);\n                setCards(newCards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const handleAddPlaceSubmit = (newCard) => {\n        api.sendCard(newCard)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    return(\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <>\n                    <Header />\n\n                    <Main\n                        onEditAvatar={handleEditAvatarClick}\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onCardClick={setSelectedCard}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                        cards={cards}\n                    />\n\n                    <EditAvatarPopup\n                        isOpen={isEditAvatarPopupOpen}\n                        onClose={closeAllPopups}\n                        onUpdateAvatar={handleUpdateAvatar}\n                    />\n\n                    <EditProfilePopup\n                        isOpen={isEditProfilePopupOpen}\n                        onClose={closeAllPopups}\n                        onUpdateUser={handleUpdateUser}\n                    />\n\n                    <AddPlacePopup\n                        isOpen={isAddPlacePopupOpen}\n                        onClose={closeAllPopups}\n                        onAddPlace={handleAddPlaceSubmit}\n                    />\n\n                    <PopupWithForm \n                        name=\"delete-item\"\n                        title=\"Вы уверены?\"\n                        onClose={closeAllPopups}\n                    />\n\n                    <ImagePopup\n                        card={selectedCard}\n                        onClose={closeAllPopups}\n                    />\n\n                    <Footer />\n                </>\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-white.2b1f7ee5.svg\";"],"sourceRoot":""}